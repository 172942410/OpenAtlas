//
// ReportDisconnectedRegions
//   Usage: ReportDisconnectedRegions CubesModel LabelLUT
//          where
//          CubesModel is a .vtk model generated by GenerateVubesFromLabnels
//          LabelLUT is the label lookup file
//      
//
#include <vtksys/SystemTools.hxx>

#include <vtkPolyDataConnectivityFilter.h>
#include <vtkPolyDataReader.h>
#include <vtkSmartPointer.h>
 
int main (int argc, char *argv[])
{
  if (argc < 2)
    {
    std::cout << "Usage: " << argv[0] << " CubesModel" << std::endl;
    return EXIT_FAILURE;
    }
 
  // Create all of the classes we will need
  vtkSmartPointer<vtkPolyDataReader> reader =
    vtkSmartPointer<vtkPolyDataReader>::New();
  vtkSmartPointer<vtkPolyDataConnectivityFilter> confilter =
    vtkSmartPointer<vtkPolyDataConnectivityFilter>::New();

  reader->SetFileName(argv[1]);
 
  confilter->SetInputConnection(reader->GetOutputPort());
  confilter->SetExtractionModeToLargestRegion();

  confilter->Update();
  if (confilter->GetNumberOfExtractedRegions() > 1)
    {
    std::cout << "WARNING: " 
              << vtksys::SystemTools::GetFilenameName(std::string(argv[1]))
              << " has "
              << confilter->GetNumberOfExtractedRegions()
              << " disconnected regions" << std::endl;
    return EXIT_FAILURE;
    }
  return EXIT_SUCCESS;
}
